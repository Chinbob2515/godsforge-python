Any server client interaction should be initiated by client, and receive a (single) response from the server (RESTFUL, I think).
Maybe in later developement, listeners can be registered- but this is very far off. For now, constant polling should be used to simulate "real time" updates.

For now, each server instance can only host one game- demand does not require more.

Possible variance of which orders get done first, apart from first come first serve?

I have a worry about orders being only discovered to be invalid at time of execution- more checks are definitely required client side, and maybe even server side, for player quality of life.

I know that block 50 should also probably be capable of being in the orders, but I'm taking a break now- I'll finish the order system when I return, and fix that as well.

In order to delete messages, messages need to be assigned UID's- I feel as though that will have odd consequences, but can't think of anything right now.
Maybe a reply mechanic should be added- which would also use the aforementioned message UID's. Could perhaps have a seperate message ID system?

Probably cleaner to create entirely sepearate pieces of code for dealing with the master player, or maybe functions for transforming player code on it?

TODO
- Any github things.
- Add a more secure authentication system.
- Loading/saving (probably with pickle)
